name: Build and Deploy Desktop Version of Hash-CAD

on:
  push:
    branches:
      - desktop-deploy

jobs:
  build_desktop:
    strategy:
      matrix:
        os: [macos-latest, macos-13] # [ubuntu-latest, macos-latest, windows-latest, macos-13]
    runs-on: ${{matrix.os}}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Prepare Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'  # Specify your required Python version

      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: 'true'
          miniconda-version: "latest"  # Add this line
          python-version: '3.11'
          environment-name: 'bcc_packaging'
          activate-environment: 'bcc_packaging'

      - name: Install Conda dependencies
        shell: bash -l {0}  # Important for conda to work properly
        run: |
          conda install -c conda-forge --file requirements.txt
        working-directory: ./flutter_app/python_server

      - name: Install custom Python library
        run: |
          pip install -e .
        working-directory: .

      # Bundle Python app using Nuitka
      - name: Bundle Python app with Nuitka
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            python -m nuitka --standalone --onefile --output-dir=./nuitka_package --output-filename=hamming_server --include-module=matplotlib.backends.backend_pdf --include-package=matplotlib.backends --onefile-tempdir-spec=%USERPROFILE%/.nuitka_cache main_server.py
          else
            python -m nuitka --standalone --onefile --output-dir=./nuitka_package --output-filename=hamming_server --include-module=matplotlib.backends.backend_pdf --include-package=matplotlib.backends --onefile-tempdir-spec=$HOME/.nuitka_cache main_server.py
          fi
        working-directory: ./flutter_app/python_server

      # Move Nuitka app to Flutter assets folder
      - name: Move Nuitka app to Flutter assets
        run: |
          mkdir -p ./flutter_app/assets/
          mv ./flutter_app/python_server/nuitka_package/hamming_server* ./flutter_app/assets/
        working-directory: .
#
#      # Build Flutter app
#      - name: Setup Flutter
#        uses: subosito/flutter-action@v2.19.0
#        with:
#          channel: stable
#
#      - name: Install Linux Dependencies
#        if: matrix.os == 'ubuntu-latest'
#        run: |
#          sudo apt-get update -y
#          sudo apt-get install -y ninja-build libgtk-3-dev
#
#      - name: Clean Flutter Project
#        run: flutter clean
#        working-directory: flutter_app
#
#      - name: Install Flutter Dependencies
#        run: flutter pub get
#        working-directory: flutter_app
#
#      - name: Build Flutter Desktop App
#        run: flutter build linux --release  # You can change 'linux' to 'macos' or 'windows' for respective platforms
#        working-directory: flutter_app
#
#      - name: Upload Artifacts
#        uses: actions/upload-artifact@v3
#        with:
#          name: desktop-build
#          path: flutter_app/build  # Adjust path to the build folder for your platform
#
#  deploy_release:
#    needs: build_desktop
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v4
#
#      # Create a new release on GitHub
#      - name: Create GitHub Release
#        uses: softprops/action-gh-release@v1
#        with:
#          files: |
#            flutter_app/build/linux/release/bundle/*  # Adjust to your platform build output path
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHub automatically provides this token
#
#      - name: Upload Build to Release
#        uses: softprops/action-gh-release@v1
#        with:
#          files: |
#            flutter_app/build/linux/release/bundle/*  # Adjust the path for the desired platform
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
