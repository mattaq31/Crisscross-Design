name: Build and Deploy Desktop Version of Hash-CAD

on:
  push:
    tags:
      - 'v*'  # This workflow runs when you push a tag that starts with 'v'
  workflow_dispatch:
jobs:
  build_desktop:
    strategy:
      matrix:
        os: [ubuntu-latest] # [ubuntu-latest, macos-latest, windows-latest, macos-13]
    runs-on: ${{matrix.os}}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Build Flutter app
      - name: Setup Flutter
        uses: subosito/flutter-action@v2.19.0
        with:
          channel: stable

      - name: Install Linux Dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev \
          libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \
          gstreamer1.0-plugins-good gstreamer1.0-plugins-bad \
          gstreamer1.0-plugins-ugly gstreamer1.0-tools

      - name: Clean Flutter Project
        run: flutter clean
        working-directory: flutter_app

      - name: Install Flutter Dependencies
        run: flutter pub get
        working-directory: flutter_app

      - name: Prepare assets folder
        run: mkdir -p ./flutter_app/assets/
        working-directory: .

      - name: Download Linux Python server
        if: runner.os == 'Linux'
        run: |
          gh run download -n hamming-server-ubuntu-latest -D ./flutter_app/assets
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Flutter Desktop App
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            flutter build windows --release  
          elif [ "$RUNNER_OS" == "macOS" ]; then
            flutter build macos --release  
          else
            flutter build linux --release  
          fi
        working-directory: flutter_app

      - name: Compress macOS app
        if: runner.os == 'macOS'
        run: ditto -c -k --sequesterRsrc --keepParent "build/macos/Build/Products/Release/#-CAD.app" "Hash-CAD-macOS.zip"

      - name: Compress Linux build
        if: runner.os == 'Linux'
        run: |
          ls -R build/linux/x64/release
          tar -czvf "Hash-CAD-linux.tar.gz" -C build/linux/x64/release/bundle/flutter_app .

      - name: Compress Windows build
        if: runner.os == 'Windows'
        run: Compress-Archive -Path build/windows/runner/Release/* -DestinationPath "Hash-CAD-windows.zip"
        shell: pwsh

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: hash-cad-${{ matrix.os }}
          path: |
            Hash-CAD-macOS.zip
            Hash-CAD-linux.tar.gz
            Hash-CAD-windows.zip
          compression-level: 0
          overwrite: true

  release:
    needs: build_desktop
    runs-on: ubuntu-latest
    steps:
#      - name: Download Windows Artifact
#        uses: actions/download-artifact@v4
#        with:
#          name: hash-cad-windows-latest
#          path: artifacts/
#
#      - name: Download Mac Artifact
#        uses: actions/download-artifact@v4
#        with:
#          name: hash-cad-macos-latest
#          path: artifacts/

      - name: Download Linux Artifact
        uses: actions/download-artifact@v4
        with:
          name: hash-cad-ubuntu-latest
          path: artifacts/

      - name: Get tag name
        id: get_tag
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: List downloaded files
        run: ls -R artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ env.TAG }}
          draft: false
          prerelease: true
          generate_release_notes: true
          files: |
            artifacts/hash-cad-*/Hash-CAD-linux.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


